{"version":3,"file":"static/js/368.e3caf5b6.chunk.js","mappings":"yOAGaA,GAAUC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,wCAIPE,EAAeF,EAAAA,GAAAA,IAAH,2FAMZG,EAAkBH,EAAAA,GAAAA,IAAH,wF,SCsB5B,MA9BA,WACE,IAAMI,GAAWC,EAAAA,EAAAA,MACjB,GAA8BC,EAAAA,EAAAA,UAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQC,aAAY,WACxBH,GAAW,SAAAI,GAAW,OAAIA,EAAc,CAAlB,GACvB,GAAE,KAOH,OALgB,IAAZL,IACFM,cAAcH,GACdN,EAAS,MAGJ,WACLS,cAAcH,EACf,CACF,GAAE,CAACH,EAASH,KAGX,iCACE,SAACF,EAAD,+HACA,UAACC,EAAD,mFACe,SAACJ,EAAD,CAASe,GAAG,IAAZ,0GADf,mQAEiDP,OAItD,C","sources":["components/pages/NotFound/NotFound.styled.js","components/pages/NotFound/NotFound.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const LinkStl = styled(NavLink)`\n  color: blue;\n`;\n\nexport const NotFoundText = styled.div`\n  font-size: 24px;\n  margin-bottom: 20px;\n  text-align: center;\n`;\n\nexport const NotFoundWrapper = styled.div`\n  font-size: 24px;\n  text-align: center;\n  margin-top: 60px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { LinkStl, NotFoundText, NotFoundWrapper } from './NotFound.styled';\n\nfunction NotFound() {\n  const navigate = useNavigate();\n  const [seconds, setSeconds] = useState(3);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setSeconds(prevSeconds => prevSeconds - 1);\n    }, 1000);\n\n    if (seconds === 0) {\n      clearInterval(timer);\n      navigate('/');\n    }\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, [seconds, navigate]);\n\n  return (\n    <>\n      <NotFoundText>Сторінку не знайдено!</NotFoundText>\n      <NotFoundWrapper>\n        Перейдіть на <LinkStl to=\"/\">домашню сторінку </LinkStl>\n        або дочекайдеся автоматичного перенаправлення {seconds}\n      </NotFoundWrapper>\n    </>\n  );\n}\n\nexport default NotFound;\n"],"names":["LinkStl","styled","NavLink","NotFoundText","NotFoundWrapper","navigate","useNavigate","useState","seconds","setSeconds","useEffect","timer","setInterval","prevSeconds","clearInterval","to"],"sourceRoot":""}